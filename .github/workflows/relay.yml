name: relay

on:
  push:

jobs:
  relay_run_unit_tests:
    name: Relay Run Unit Tests
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgres://postgres@localhost:5432/postgres?sslmode=disable
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout sources
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2

      - name: Install Nix
        uses: cachix/install-nix-action@29bd9290ef037a3ecbdafe83cbd2185e9dd0fa0a # v20
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: "sandbox = false"

      - name: Cache Nix
        uses: cachix/cachix-action@v12
        with:
          name: chainlink-cosmos
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Compile relay
        run: nix develop -c go build -v ./pkg/cosmos/...

      - name: Run unit tests
        run: nix develop -c go test -v -covermode=atomic ./pkg/cosmos/... -coverpkg=./... -coverprofile=coverage.txt

      - name: Run tests with the race detector enabled
        run: nix develop -c go test -v ./pkg/cosmos/... -race -count=10 -coverpkg=./... -coverprofile=race_coverage.txt
      
      - name: Upload Go test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: go-test-results
          path: |
            ./output.txt
            ./coverage.txt
            ./race_coverage.txt
