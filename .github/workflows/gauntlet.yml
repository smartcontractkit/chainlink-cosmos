name: gauntlet

on:
  push:

jobs:
  gauntlet_build:
    name: Gauntlet Build
    env:
      CI: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Install Nix
        uses: cachix/install-nix-action@29bd9290ef037a3ecbdafe83cbd2185e9dd0fa0a # v20
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: "sandbox = false"
      - name: Cache Nix
        uses: cachix/cachix-action@v12
        with:
          name: chainlink-cosmos
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix develop -c yarn install --frozen-lockfile
      - run: nix develop -c yarn build

  gauntlet_format:
    name: Gauntlet Format
    env:
      CI: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Install Nix
        uses: cachix/install-nix-action@29bd9290ef037a3ecbdafe83cbd2185e9dd0fa0a # v20
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: "sandbox = false"
      - name: Cache Nix
        uses: cachix/cachix-action@v12
        with:
          name: chainlink-cosmos
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix develop -c yarn install --frozen-lockfile
      - run: nix develop -c yarn lint:format

  gauntlet_run_tests:
    name: Gauntlet Run Tests
    env:
      CI: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Install Nix
        uses: cachix/install-nix-action@29bd9290ef037a3ecbdafe83cbd2185e9dd0fa0a # v20
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: "sandbox = false"
      - name: Cache Nix
        uses: cachix/cachix-action@v12
        with:
          name: chainlink-cosmos
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Cache Wasmd Artifacts
        uses: actions/cache@v3
        id: cache-wasmd-artifacts
        env:
          cache-name: cache-wasmd-artifacts
        with:
          path: artifacts
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('artifacts') }}

      - if: ${{ steps.cache-wasmd-artifacts.outputs.cache-hit != 'true' }}
        name: Build Wasmd Artifacts
        run: make contracts_compile
          
      - run: nix develop -c yarn install --frozen-lockfile
      - run: nix develop -c yarn test
