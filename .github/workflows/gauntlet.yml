name: gauntlet

on:
  push:

jobs:
  gauntlet_build:
    name: Gauntlet Build
    env:
      CI: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Install Nix
        uses: cachix/install-nix-action@29bd9290ef037a3ecbdafe83cbd2185e9dd0fa0a # v20
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: "sandbox = false"
      - name: Cache Nix
        uses: cachix/cachix-action@v12
        with:
          name: chainlink-cosmos
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix develop -c yarn install --frozen-lockfile
      - run: nix develop -c yarn build

  gauntlet_format:
    name: Gauntlet Format
    env:
      CI: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Install Nix
        uses: cachix/install-nix-action@29bd9290ef037a3ecbdafe83cbd2185e9dd0fa0a # v20
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: "sandbox = false"
      - name: Cache Nix
        uses: cachix/cachix-action@v12
        with:
          name: chainlink-cosmos
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix develop -c yarn install --frozen-lockfile
      - run: nix develop -c yarn lint:format

  gauntlet_eslint:
    name: Gauntlet ESLint
    env:
      CI: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Install Nix
        uses: cachix/install-nix-action@29bd9290ef037a3ecbdafe83cbd2185e9dd0fa0a # v20
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: "sandbox = false"
      - name: Cache Nix
        uses: cachix/cachix-action@v12
        with:
          name: chainlink-cosmos
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix develop -c yarn install --frozen-lockfile
      - run: nix develop -c yarn eslint
      - name: Upload eslint report
        if: always()
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v3.1.0
        with:
          name: gauntlet-eslint-report
          path: ./eslint-report.json

  gauntlet_run_tests:
    name: Gauntlet Run Tests
    env:
      CI: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Install Nix
        uses: cachix/install-nix-action@29bd9290ef037a3ecbdafe83cbd2185e9dd0fa0a # v20
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: "sandbox = false"
      - name: Cache Nix
        uses: cachix/cachix-action@v12
        with:
          name: chainlink-cosmos
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Cache Wasmd Artifacts
        uses: actions/cache@v3
        id: cache-wasmd-artifacts
        env:
          cache-name: cache-wasmd-artifacts
        with:
          path: artifacts
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('contracts') }}

      - name: Build Wasmd Artifacts
        if: steps.cache-wasmd-artifacts.outputs.cache-hit != 'true'
        run: make contracts_compile
          
      - run: nix develop -c yarn install --frozen-lockfile
      - run: nix develop -c yarn test:ci --coverage

      - name: Upload test coverage report
        if: always()
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v3.1.0
        with:
          name: typescript-test-coverage
          path: ./coverage/lcov.info

