name: gauntlet

on:
  push:

jobs:
  gauntlet_build:
    name: Gauntlet Build
    env:
      CI: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
      - name: Install Nix
        uses: cachix/install-nix-action@ba0dd844c9180cbf77aa72a116d6fbc515d0e87b # v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: "sandbox = false"
      - name: Cache Nix
        uses: cachix/cachix-action@18cf96c7c98e048e10a83abd92116114cd8504be # v14
        with:
          name: chainlink-cosmos
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix develop -c yarn install --frozen-lockfile
      - run: nix develop -c yarn build

  gauntlet_format:
    name: Gauntlet Format
    env:
      CI: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
      - name: Install Nix
        uses: cachix/install-nix-action@ba0dd844c9180cbf77aa72a116d6fbc515d0e87b # v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: "sandbox = false"
      - name: Cache Nix
        uses: cachix/cachix-action@18cf96c7c98e048e10a83abd92116114cd8504be # v14
        with:
          name: chainlink-cosmos
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix develop -c yarn install --frozen-lockfile
      - run: nix develop -c yarn lint:format

  gauntlet_eslint:
    name: Gauntlet ESLint
    env:
      CI: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
      - name: Install Nix
        uses: cachix/install-nix-action@ba0dd844c9180cbf77aa72a116d6fbc515d0e87b # v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: "sandbox = false"
      - name: Cache Nix
        uses: cachix/cachix-action@18cf96c7c98e048e10a83abd92116114cd8504be # v14
        with:
          name: chainlink-cosmos
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix develop -c yarn install --frozen-lockfile
      - run: nix develop -c yarn eslint
      - name: Upload eslint report
        if: always()
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: gauntlet-eslint-report
          path: ./eslint-report.json

  gauntlet_run_tests:
    name: Gauntlet Run Tests
    env:
      CI: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
      - name: Install Nix
        uses: cachix/install-nix-action@ba0dd844c9180cbf77aa72a116d6fbc515d0e87b # v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: "sandbox = false"
      - name: Cache Nix
        uses: cachix/cachix-action@18cf96c7c98e048e10a83abd92116114cd8504be # v14
        with:
          name: chainlink-cosmos
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Cache Wasmd Artifacts
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        id: cache-wasmd-artifacts
        env:
          cache-name: cache-wasmd-artifacts
        with:
          path: artifacts
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('contracts') }}

      - name: Build Wasmd Artifacts
        if: steps.cache-wasmd-artifacts.outputs.cache-hit != 'true'
        run: make contracts_compile
          
      - run: nix develop -c yarn install --frozen-lockfile
      - run: nix develop -c yarn test:ci --coverage

      - name: Upload test coverage report
        if: always()
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: typescript-test-coverage
          path: ./coverage/lcov.info

