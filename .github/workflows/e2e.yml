name: e2e_smoke_tests
on:
  workflow_call:
    inputs:
      repo_name:
        required: true
        description: The name of the github repository
        default: ${{ github.repository }}
        type: string
      ref:
        required: true
        description: The git ref to use
        default: ${{ github.sha }}
        type: string
      cl_repo:
        required: true
        description: The chainlik ecr repository to use
        default: public.ecr.aws/z0b1w9r9/chainlink
        type: string
      cl_image:
        required: true
        description: The chainlink image to use
        default: develop
        type: string
    secrets:
      QA_AWS_ACCESS_KEY_ID:
        required: true
        description: The AWS access key id to use
      QA_AWS_SECRET_KEY:
        required: true
        description: The AWS secret key to use
      QA_AWS_REGION:
        required: true
        description: The AWS region to use
      QA_AWS_ROLE_TO_ASSUME:
        required: true
        description: The AWS role to assume
      QA_KUBECONFIG:
        required: true
        description: The kubernetes configuation to use
        
jobs:
  e2e_build_contracts:
    name: E2E Build Contracts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repo_name }}
          ref: ${{ inputs.ref }}
      - name: Cache cargo registry
        uses: actions/cache@v2.1.7
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-v2-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v2.1.7
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-v2-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Build Artifacts
        run: |
          make contracts_compile
      - name: Upload Artifacts
        uses: actions/upload-artifact@master
        with:
          name: artifacts
          path: artifacts
  e2e_run_smoke_tests:
    name: E2E Run Smoke Tests
    runs-on: ubuntu-latest
    needs: e2e_build_contracts
    env:
      CGO_ENABLED: 1
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repo_name }}
          ref: ${{ inputs.ref }}
      - name: Install Nix
        uses: cachix/install-nix-action@v14
        with:
          install_url: https://nixos-nix-install-tests.cachix.org/serve/vij683ly7sl95nnhb67bdjjfabclr85m/install
          install_options: '--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve'
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.QA_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.QA_AWS_SECRET_KEY }}
          aws-region: ${{ secrets.QA_AWS_REGION }}
          role-to-assume: ${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 3600
      - name: Set Kubernetes Context
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.QA_KUBECONFIG }}
      - name: Cache Vendor Packages
        uses: actions/cache@v2
        id: cache-packages
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Download Go Vendor Packages
        if: steps.cache-packages.outputs.cache-hit != 'true'
        run: nix develop -c make download
      - name: Install Ginkgo CLI
        run: nix develop -c make install
      - name: Download Artifacts
        uses: actions/download-artifact@master
        with:
          name: artifacts
          path: artifacts
      - name: Generate gauntlet executable
        run: nix develop -c make build_js
      - name: Run Tests
        env:
          SELECTED_NETWORKS: localterra
          CHAINLINK_IMAGE: ${{ inputs.cl_repo }}
          CHAINLINK_VERSION: ${{ inputs.cl_image }}
        run: |
          PATH=$PATH:$(go env GOPATH)/bin
          export PATH
          cp -r artifacts packages-ts/gauntlet-terra-contracts/artifacts/bin
          nix develop -c make test_smoke
      - name: Publish Test Results
        uses: mikepenz/action-junit-report@v2
        if: always()
        with:
          report_paths: "./tests-smoke-report.xml"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: Smoke Test Results
      - name: Publish Artifacts
        if: failure()
        uses: actions/upload-artifact@v2.2.4
        with:
          name: test-logs
          path: /home/runner/work/chainlink-terra/chainlink-terra/tests/e2e/logs
