name: SonarQube Scan

on:
  push:
    branches:
      - develop
  pull_request:

jobs:
  wait_for_workflows:
    name: Wait for workflows
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout Repository
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
        with:
          ref: ${{ github.event.pull_request.head.sha || github.event.merge_group.head_sha }}

      - name: Wait for Workflows
        id: wait
        uses: smartcontractkit/chainlink-github-actions/utils/wait-for-workflows@e29366cdecfe6befff9ab8c3cfe4825218505d58 # v2.3.16
        with:
          max-timeout: "1200"
          polling-interval: "30"
          exclude-workflow-names: "CodeQL,release_contracts,contracts,Integration Tests Publish,e2e_tests_custom_cl,Integration Test (Docker)"
          exclude-workflow-ids: ""
          github-token: ${{ secrets.GITHUB_TOKEN }}
        env:
          DEBUG: "true"

  sonarqube:
    name: SonarQube Scan
    needs: [ wait_for_workflows ]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout the repo
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
        with:
          fetch-depth: 0 # fetches all history for all tags and branches to provide more metadata for sonar reports

      - name: Download Golangci report
        uses: dawidd6/action-download-artifact@93c629661111aae296c04004b30ae3ba22ed46f3 # v5
        with:
          workflow: golangci-lint.yml
          workflow_conclusion: ""
          name: golangci-lint-report
          if_no_artifact_found: warn

      - name: Download relay test reports
        uses: dawidd6/action-download-artifact@93c629661111aae296c04004b30ae3ba22ed46f3 # v5
        with:
          workflow: relay.yml
          workflow_conclusion: ""
          name: go-test-results
          if_no_artifact_found: warn
      
      - name: Download gauntlet test reports
        uses: dawidd6/action-download-artifact@93c629661111aae296c04004b30ae3ba22ed46f3 # v5
        with:
          workflow: gauntlet.yml
          workflow_conclusion: ""
          name_is_regexp: true
          name: typescript-test-coverage
          if_no_artifact_found: warn

      - name: Download gauntlet eslint reports
        uses: dawidd6/action-download-artifact@93c629661111aae296c04004b30ae3ba22ed46f3 # v5
        with:
          workflow: gauntlet.yml
          workflow_conclusion: ""
          name_is_regexp: true
          name: gauntlet-eslint-report
          if_no_artifact_found: warn

      - name: Set SonarQube Report Paths
        id: sonarqube_report_paths
        shell: bash
        run: |
          echo "sonarqube_go_tests_report_paths=$(find . -type f -name 'output.txt' -printf "%p,")" >> $GITHUB_OUTPUT
          echo "sonarqube_go_coverage_report_paths=$(find . -type f -name '*coverage.txt' -printf "%p,")" >> $GITHUB_OUTPUT
          echo "sonarqube_golangci_report_paths=$(find . -type f -name 'golangci-lint-report.xml' -printf "%p,")" >> $GITHUB_OUTPUT
          echo "sonarqube_eslint_report_paths=$(find -type f -name 'eslint-report.json' -printf "%p")" >> $GITHUB_OUTPUT
          echo "sonarqube_ts_js_coverage_report_paths=$(find . -type f -name 'lcov.info' -printf "%p,")" >> $GITHUB_OUTPUT

      - name: Update ESLint report symlinks
        continue-on-error: true
        run: sed -i 's+/home/runner/work/feeds-manager/feeds-manager/+/github/workspace/+g' ${{ steps.sonarqube_report_paths.outputs.sonarqube_eslint_report_paths }}

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@53c3e3207fe4b8d52e2f1ac9d6eb1d2506f626c0 # v2.0.2
        with:
          args: >
            -Dsonar.go.tests.reportPaths=${{ steps.sonarqube_report_paths.outputs.sonarqube_go_tests_report_paths }}
            -Dsonar.go.coverage.reportPaths=${{ steps.sonarqube_report_paths.outputs.sonarqube_go_coverage_report_paths }}
            -Dsonar.go.golangci-lint.reportPaths=${{ steps.sonarqube_report_paths.outputs.sonarqube_golangci_report_paths }}
            -Dsonar.eslint.reportPaths=${{ steps.sonarqube_report_paths.outputs.sonarqube_eslint_report_paths }}
            -Dsonar.javascript.lcov.reportPaths=${{ steps.sonarqube_report_paths.outputs.sonarqube_ts_js_coverage_report_paths }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
