name: Build Test Image
description: A composite action that allows building and publishing the test remote runner image

inputs:
  tag:
    description: The tag to use by default and to use for checking image existance
    default: ${{ github.sha }}
    required: false
  other_tags:
    description: Other tags to push if needed
    required: false
  artifacts_path:
    description: The path for downloading the built artifacts
    required: false
    default: artifacts
  QA_AWS_ROLE_TO_ASSUME:
    description: The AWS role to assume as the CD user, if any. Used in configuring the docker/login-action
    required: true
  QA_AWS_REGION:
    description: The AWS region the ECR repository is located in, should only be needed for public ECR repositories, used in configuring docker/login-action
    required: true
  QA_AWS_ACCOUNT_NUMBER:
    description: The AWS region the ECR repository is located in, should only be needed for public ECR repositories, used in configuring docker/login-action
    required: true

runs:
  using: composite
  steps:
    - name: Check if image exists
      id: check-image
      uses: smartcontractkit/chainlink-github-actions/docker/image-exists@e29366cdecfe6befff9ab8c3cfe4825218505d58 # v2.3.16
      with:
        repository: chainlink-cosmos-tests
        tag: ${{ inputs.tag }}
        AWS_REGION: ${{ inputs.QA_AWS_REGION }}
        AWS_ROLE_TO_ASSUME: ${{ inputs.QA_AWS_ROLE_TO_ASSUME }}

    - name: Cache cargo registry
      if: steps.check-image.outputs.exists == 'false'
      uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-v2-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo index
      if: steps.check-image.outputs.exists == 'false'
      uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-v2-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Build Artifacts
      if: steps.check-image.outputs.exists == 'false'
      shell: sh
      run: make contracts_compile
    - name: Upload Artifacts
      if: steps.check-image.outputs.exists == 'false'
      uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
      with:
        name: artifacts
        path: ${{ inputs.artifacts_path }}

    - name: Build and Publish Test Runner
      if: steps.check-image.outputs.exists == 'false'
      uses: smartcontractkit/chainlink-github-actions/docker/build-push@e29366cdecfe6befff9ab8c3cfe4825218505d58 # v2.3.16
      with:
        tags: |
          ${{ inputs.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ inputs.QA_AWS_REGION }}.amazonaws.com/chainlink-cosmos-tests:${{ inputs.tag }}
          ${{ inputs.other_tags }}
        file: ./integration-tests/test.Dockerfile
        build-args: |
          SUITES="smoke"
        AWS_REGION: ${{ inputs.QA_AWS_REGION }}
        AWS_ROLE_TO_ASSUME: ${{ inputs.QA_AWS_ROLE_TO_ASSUME }}
    - name: Print Image Built
      env:
        INPUTS_TAG: ${{ inputs.tag }}
      shell: sh
      run: |
        echo "### chainlink-cosmos-tests image tag for this test run :ship:" >> $GITHUB_STEP_SUMMARY
        echo "\`${INPUTS_TAG}\`" >> $GITHUB_STEP_SUMMARY
